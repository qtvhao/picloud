#!/bin/bash
set -e -o pipefail
source .env
if [ -z "$DOMAIN" ]; then
    echo "Please set DOMAIN in .env"
    exit 1
fi
echo "Installing S3"
curl -O https://raw.githubusercontent.com/minio/operator/master/helm-releases/operator-5.0.10.tgz
curl -O https://raw.githubusercontent.com/minio/operator/master/helm-releases/tenant-5.0.10.tgz
helm uninstall minio-operator -n minio-operator || true
helm install \
    --namespace minio-operator \
    --create-namespace \
    minio-operator operator-5.0.10.tgz
kubectl apply -f - <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: console-sa-secret
  namespace: minio-operator
  annotations:
    kubernetes.io/service-account.name: console-sa
type: kubernetes.io/service-account-token
EOF
kubectl -n minio-operator  get secret console-sa-secret -o jsonpath="{.data.token}" | base64 --decode
# 
helm upgrade --install \
    --namespace tenant-ns \
    --create-namespace \
    --set tenant.name=picloud,secrets.name=tenant-picloud-env-configuration,\
tenant.pools[0].storageclassName=local-path,\
tenant.pools[0].servers=2 \
    tenant-picloud tenant-5.0.10.tgz
exit 0
helm repo add minio https://charts.min.io/
# ,rootUser=rootuser,rootPassword=$ROOT_PASSWORD
helm install --set users[0].accessKey=accessKey,users[0].secretKey=secretKey,users[0].policy=readwrite,resources.requests.memory=512Mi minio minio/minio
helm get notes minio
rootUsername=$(kubectl get secret --namespace default minio -o jsonpath="{.data.rootUser}" | base64 --decode)
rootPassword=$(kubectl get secret --namespace default minio -o jsonpath="{.data.rootPassword}" | base64 --decode)
TUNNEL_NAMESPACE=default ./pic expose http minio-console 9001
TUNNEL_NAMESPACE=default ./pic expose http minio 9000
echo "Minio root username: $rootUsername"
echo "Minio root password: $rootPassword"
echo "Minio console: https://http-minio-console-9001.$DOMAIN/login"