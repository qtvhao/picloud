#!/bin/bash
set -e -o pipefail
echo
source .env
args=("$@")
REPO_URL=${args[0]}
IDENTITY_FILE=${args[1]}
CLONE_DIR=${args[2]}
if [ -z "$REPO_URL" ]; then
    echo "REPO_URL is empty"
    exit 1
fi
if [ -z "$IDENTITY_FILE" ]; then
    echo "IDENTITY_FILE is empty"
    exit 1
fi
if [ ! -f $IDENTITY_FILE ]; then
    echo "$IDENTITY_FILE does not exist"
    exit 1
fi
REPO_NAME=$(echo $REPO_URL | sed 's/.*\///')
REPO_URL_ENDS_WITH_GIT="x"$(echo $REPO_URL | grep '\.git$' | wc -l) || true
if [ "x0" != "$REPO_URL_ENDS_WITH_GIT" ]; then
    REPO_NAME=$(echo $REPO_URL | sed 's/.*\///' | sed 's/\.git$//')
else
    echo "REPO_URL does not end with .git"
    exit 1
fi
PASSWORD=$(kubectl get secret --namespace gitlab-ns gitlab-gitlab-initial-root-password -o jsonpath="{.data.password}" | base64 --decode)
echo "GitLab root password: $PASSWORD"
rm -rf pic-repos || true
mkdir pic-repos
echo "Cloning $REPO_NAME from $REPO_URL"
HEAD=$(git rev-parse --abbrev-ref HEAD)
# export GIT_SSH_COMMAND="ssh -o ProxyCommand=\"cloudflared access ssh --hostname %h\""
REPO_NAME_IN_LOWER_CASE=$(echo $REPO_NAME | tr '[:upper:]' '[:lower:]')
FQDN_ADDRESS="http-gitlab-webservice-default-gitlab-ns-8181.$DOMAIN"
REMOTE_REPO="https://root:$PASSWORD@$FQDN_ADDRESS/root/$REPO_NAME_IN_LOWER_CASE.git"
echo "REMOTE_REPO: $REMOTE_REPO"
# echo "HEAD: $HEAD"
IDENTITY_FILE=$(realpath $IDENTITY_FILE)
SSH_FQDN_ADDRESS="tcp-gitlab-gitlab-shell-gitlab-ns-22.$DOMAIN"
while true; do
    echo "Cloning $REPO_NAME from $REPO_URL"
    (cd pic-repos && GIT_SSH_COMMAND="ssh -i $IDENTITY_FILE" git clone $REPO_URL $REPO_NAME) && break || true
    sleep 5
done
# 
while true; do
    echo "Pulling $REPO_NAME from $REMOTE_REPO"
    (cd pic-repos && cd $REPO_NAME && git pull --set-upstream $REMOTE_REPO)
    echo "Pushing $REPO_NAME to $REMOTE_REPO"
    (cd pic-repos && cd $REPO_NAME && git push --set-upstream $REMOTE_REPO --all) && break || true
    sleep 5
done
CI_REGISTRY="gitlab-registry.gitlab-ns:5000"
CI_REGISTRY_IMAGE="$CI_REGISTRY/root/$REPO_NAME"
./pic declare-project-variables root%2F$REPO_NAME CI_REGISTRY           "$CI_REGISTRY"
./pic declare-project-variables root%2F$REPO_NAME CI_REGISTRY_IMAGE     "$CI_REGISTRY_IMAGE"
./pic declare-project-variables root%2F$REPO_NAME CI_REGISTRY_PASSWORD  "$PASSWORD"
./pic declare-project-variables root%2F$REPO_NAME CI_REGISTRY_USER      "root"
rm -rf pic-repos
./pic force-connect-gitlab-agent $REPO_NAME_IN_LOWER_CASE
SSH_REMOTE_REPO="git@$SSH_FQDN_ADDRESS:root/$REPO_NAME_IN_LOWER_CASE.git"
export GIT_SSH_COMMAND="ssh -i $IDENTITY_FILE \
    -o StrictHostKeyChecking=no \
    -o ProxyCommand=\"cloudflared access ssh --hostname %h\" -o StrictHostKeyChecking=no"
if [ ! -z "$CLONE_DIR" ]; then
    echo "CLONE_DIR: $CLONE_DIR/$REPO_NAME"
    ssh-keygen -f "$HOME/.ssh/known_hosts" -R "$SSH_FQDN_ADDRESS"
    git clone $SSH_REMOTE_REPO $CLONE_DIR/$REPO_NAME || \
        (cd $CLONE_DIR/$REPO_NAME && echo "Updating $CLONE_DIR/$REPO_NAME" && git pull)
fi
