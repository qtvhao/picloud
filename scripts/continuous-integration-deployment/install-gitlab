#!/bin/bash
set -e
source .env
if [ -z "$DOMAIN" ]; then
    echo "Please set DOMAIN in .env"
    exit 1
fi
if [ -z "$EMAIL" ]; then
    echo "Please set EMAIL in .env"
    exit 1
fi
set -e
args=("$@")
PASSWORD=${args[0]}
echo "Setting password to $PASSWORD"

helm repo add gitlab https://charts.gitlab.io/ || echo ""
helm repo update
kubectl get namespace gitlab-ns || kubectl create namespace gitlab-ns
kubectl get secret --namespace gitlab-ns gitlab-gitlab-initial-root-password && kubectl delete secret --namespace gitlab-ns gitlab-gitlab-initial-root-password || true
kubectl create secret --namespace gitlab-ns generic gitlab-gitlab-initial-root-password --from-literal=password="$PASSWORD"
# PASSWORD=$(kubectl create secret generic gitlab-gitlab-initial-root-password --from-literal=password=$(head -c 512 /dev/urandom | LC_CTYPE=C tr -cd 'a-zA-Z0-9' | head -c 32))
helm upgrade --install gitlab gitlab/gitlab \
    --namespace gitlab-ns \
    --set certmanager-issuer.email="$EMAIL",\
global.edition=ce,\
gitlab-runner.install=true,\
runners.privileged=true,\
gitlab-runner.runners.privileged=true &
#   --set global.ingress.tls.enabled=true,\
# global.ingress.enabled=false,\
# 
# global.appConfig.certmanager.enabled=true,\
# global.edition=ce,\
# certmanager.install=true,\
# global.ingress.configureCertmanager=false,\
# global.kas.tls.enabled=true,\
# nginx-ingress.enabled=false,\
# global.hosts.domain="$DOMAIN",\
#  &
./pic wait deploy       gitlab-minio                  gitlab-ns Available
./pic wait deploy       gitlab-registry               gitlab-ns Available
./pic wait deploy       gitlab-sidekiq-all-in-1-v2    gitlab-ns Available
./pic wait deploy       gitlab-webservice-default     gitlab-ns Available
TUNNEL_NAMESPACE=gitlab-ns ./pic expose http gitlab-webservice-default 8181
TUNNEL_NAMESPACE=gitlab-ns ./pic expose http gitlab-registry           5000
while true; do
    kubectl get secret --namespace gitlab-ns gitlab-gitlab-initial-root-password && break || sleep 5
done
PASSWORD=$(kubectl get secret --namespace gitlab-ns gitlab-gitlab-initial-root-password -o jsonpath="{.data.password}" | base64 --decode)
echo "GitLab root password: $PASSWORD"
kubectl create secret docker-registry regcred --docker-server=http-gitlab-registry-5000.$DOMAIN --docker-username=root --docker-password=$PASSWORD --docker-email=$EMAIL || echo ""
