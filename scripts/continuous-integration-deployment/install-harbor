#!/bin/bash
set -e -o pipefail
source .env
if [ -z "$DOMAIN" ]; then
    echo "Please set DOMAIN in .env"
    exit 1
fi
if [ -z "$EMAIL" ]; then
    echo "Please set EMAIL in .env"
    exit 1
fi
set -e -o pipefail
args=("$@")
IDENTIFY_FILE=${args[0]}
helm repo add harbor https://helm.goharbor.io
GITLAB_ROOT_GENERATED_PASSWORD=$(jq -r '.gitlab_root_generated_password' "$HOME/.pic/gitlab.json")
# mount ~/.pic/harbor-registry-data
mkdir -p /harbor-registry-data
chown -R 1000:1000 /harbor-registry-data/
chmod -R 0777 /harbor-registry-data/
# 0777 is required for the docker container to write to the mounted volume
# 1000 is the uid of the user in the docker container
kubectl get namespace harbor-ns || kubectl create namespace harbor-ns
# set nodeAffinity required nodeSelectorTerms, matchExpressions key: kubernetes.io/hostname, operator: In, values: [picloud]
KUBERNETES_HOSTNAME=`kubectl get nodes -o json | jq -r '.items[0].metadata.labels."kubernetes.io/hostname"'`
kubectl apply -f - <<EOF
apiVersion: v1
kind: PersistentVolume
metadata:
  name: harbor-registry-data
  namespace: harbor-ns
spec:
    storageClassName: local-path
    capacity:
        storage: 20Gi
    accessModes:
        - ReadWriteOnce
    hostPath:
        path: /harbor-registry-data
        type: DirectoryOrCreate
    nodeAffinity:
        required:
            nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - $KUBERNETES_HOSTNAME
EOF
kubectl apply -f - <<EOF
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harbor-registry-data
  namespace: harbor-ns
spec:
    volumeName: harbor-registry-data
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: 20Gi
EOF

helm upgrade --install harbor harbor/harbor  -n harbor-ns \
    --set registry.credentials.username=root \
    --set persistence.persistentVolumeClaim.registry.existingClaim=harbor-registry-data \
    --set registry.credentials.password=$GITLAB_ROOT_GENERATED_PASSWORD


./pic wait deployment harbor-registry harbor-ns Available

kubectl get secret regcred --namespace default || \
    kubectl create secret docker-registry regcred \
    --docker-server=http-harbor-registry-harbor-ns-5000.$DOMAIN --docker-username=root --docker-password=$GITLAB_ROOT_GENERATED_PASSWORD --namespace default

./pic expose http harbor-registry.harbor-ns 5000 "200"
