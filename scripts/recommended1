#!/bin/bash
source .env
set -xeo pipefail
args=("$@")
IDENTIFY_FILE=${args[0]}
PIC_DIR="$HOME/.pic"
LOGS_DIR="$PIC_DIR/logs"
echo "Installing k3s recommended packages 1"
./pic recommended2 $IDENTIFY_FILE

( time (./pic auto-join $IDENTIFY_FILE | tee $LOGS_DIR/auto-join.log))

time (./pic redis | tee $LOGS_DIR/redis.log)
# wait $(jobs -p)

kubectl auth can-i '*' '*' --as=system:serviceaccount:kube-system:coredns || \
    kubectl create clusterrolebinding coredns-admin-binding --clusterrole=cluster-admin --serviceaccount=kube-system:coredns
# BEGIN replace-Corefile
Corefile="Corefile"
coredns_custom="coredns-custom"
NS="kube-system"
coredns_custom_content="
. {
    forward . tls://1.1.1.1 tls://1.0.0.1 {
       tls_servername cloudflare-dns.com
       health_check 5s
    }
    cache 30
}"
kubectl -n $NS create configmap $coredns_custom --from-literal=log.override="" --from-literal=stub.server="" --from-literal=Corefile="$coredns_custom_content" --dry-run=client -o yaml | kubectl apply -f -
kubectl -n $NS rollout restart deployment coredns
# END replace-Corefile

TUNNEL_NAMESPACE=default ./pic expose http console.minio-operator 9090 200
TUNNEL_NAMESPACE=default ./pic expose http tenant-picloud-hl.tenant-ns 9000 400 "" "true"

./pic expose http harbor-registry.harbor-ns 5000 "200" "" "true"
