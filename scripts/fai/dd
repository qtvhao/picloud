#!/bin/bash
syslinux -h > /dev/null 2>&1 || apt-get install syslinux -y
pv -h > /dev/null 2>&1 || apt-get install pv -y
args=("$@")
ISO_FILE=${args[0]}
USB_DEVICE=${args[1]}
if [ "$ISO_FILE" == "" ]; then
    echo "Please provide iso file"
    echo "Run the following command to burn the image to a USB stick:"
    echo "    ./pic dd \$ISO_FILE /dev/USB_DEVICE_NAME"
    exit 1
fi
if [ "$USB_DEVICE" == "" ]; then
    echo
    echo "Please provide USB device"
    echo "Run the following command to burn the image to a USB stick:"
    echo "    ./pic dd \$ISO_FILE /dev/USB_DEVICE_NAME"
    echo "List of USB devices:"
    ISO_FILE_SED=$(echo $ISO_FILE | sed 's/\//\\\//g')
    lsblk -n -o NAME --nodeps | awk '{print $1}' | sed 's/^/    .\/pic dd '$ISO_FILE_SED' \/dev\//'
    exit 1
fi
echo "ISO_FILE: $ISO_FILE"
echo "USB_DEVICE: $USB_DEVICE"
FILE_SIZE_IN_MB=$(du -m $ISO_FILE | cut -f1)
echo "File size in MB: $FILE_SIZE_IN_MB""Mb"
echo "Deleting All Partitions From $USB_DEVICE"

echo "Creating Partition scheme MBR"
echo "Target system: BIOS"
echo "Persistent partition size: 0"
echo "File system type: fat32"
echo "Cluster size: 8192 bytes (default)"
# Quick format
# Create extended label and icon files
(dd if=/dev/zero of=$USB_DEVICE bs=512 count=1 conv=notrunc && sync)
# Create partition table
parted -s $USB_DEVICE mklabel gpt
parted -s $USB_DEVICE mkpart primary fat32 0% 100%
# mkfs.vfat -F 32 -n "FAI" -I $USB_DEVICE
# set partition bootable
parted -s $USB_DEVICE set 1 boot on
parted -s $USB_DEVICE set 1 lba on
echo
parted -s $USB_DEVICE print
# set MBR

# Create file system FAT32 with label "FAI" and icon "FAI" on $USB_DEVICE partition 1
# isohybrid $HOSTNAME-fai-cd.iso --entry 4 --type 0x1c
# exit 0
# Create file system ext4 with label "FAI" on $USB_DEVICE partition 2
# copy $HOSTNAME-fai-cd.iso to $USB_DEVICE partition 1
time (dd if=$ISO_FILE of=$USB_DEVICE bs=4M status=progress && sync)
eject $USB_DEVICE
# mkdir -p /mnt/fai-usb
# mount $USB_DEVICE /mnt/fai-usb
# ls -l /mnt/fai-usb
echo "At this point, you can boot from the USB stick and wait for the installation to finish (until the machine shuts down)."
echo "After the installation is finished, you can remove the USB stick and boot the machine from the hard disk."
echo "In order to connect to machines, you need to add your public ssh key to github."
./pic wait-nodename
exit 0
