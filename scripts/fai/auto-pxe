#!/bin/bash
set -xeo pipefail
args=("$@")
IDENTITY_FILE=${args[0]}
MACHINES=${args[1]}
if [ -z "$IDENTITY_FILE" ]; then
    echo "IDENTITY_FILE is empty. Specify a identify file for the new machine."
    echo "Usage: ./pic print-available-node IDENTIFY_FILE"
    exit 1
fi
if [ ! -f "$IDENTITY_FILE" ]; then
    echo "IDENTITY_FILE does not exist. Specify a identify file for the new machine."
    echo "Usage: ./pic print-available-node IDENTIFY_FILE"
    exit 1
fi
hostnameI=$(./pic hostname)
if [ -z "$MACHINES" ]; then
    echo "MACHINES is empty. Specify a list of machines to provision."
    echo "Usage: ./pic auto-pxe IDENTIFY_FILE \"MACHINE1 MACHINE2 ...\""
    exit 1
fi
echo "Provisioning on metal machine"
MACHINES=$(echo $MACHINES | tr " " "\n")
echo "Machine list:"
echo "$MACHINES"

for MACHINE in $MACHINES; do
    MACHINE=`echo "$MACHINE" | tr "," " "`
    MAC_ADDRESS=`echo "$MACHINE" | awk '{print $1}'`
    IP_ADDRESS=`echo "$MACHINE" | awk '{print $2}'`
    HOSTNAME=`echo "$MACHINE" | awk '{print $3}'`
    #echo "Provisioning $MAC_ADDRESS $IP_ADDRESS $HOSTNAME"
    # 
    docker exec -i create-pxelinux-configuration bash -c "echo '"$IP_ADDRESS" "$HOSTNAME"' >> /etc/hosts; dhcp-edit $HOSTNAME $MAC_ADDRESS"
    cat /etc/hosts | grep "$HOSTNAME" || echo $IP_ADDRESS' '$HOSTNAME >> /etc/hosts
    docker exec -it create-pxelinux-configuration bash -c "fai-chboot -IFv -u nfs://`hostname -I | tr ' ' '\n' | head -n1`/srv/fai/config $HOSTNAME"
done
exit 0
echo;echo;
./pic list-nodename $IDENTITY_FILE
echo "Done"
