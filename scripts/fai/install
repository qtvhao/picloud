#!/bin/bash
set -e
rm time.log || true
rm fai-cd.log || true
rm fai-mirror.log || true
rm fai-setup.log || true
args=("$@")
HOSTNAME=${args[0]}
if [ -z "$HOSTNAME" ]; then
    echo "HOSTNAME is empty. Specify a hostname for the new machine."
    echo "Usage: ./pic fai HOSTNAME"
    exit 1
fi
echo "HOSTNAME: $HOSTNAME"
#

docker rm -f fai || true
export cl="DEBIAN,DHCPC,DEMO,FAIBASE,BOOKWORM,ONE,SSH_SERVER,HALT,GNOME,FAIME,GRUB_PC,GRUB_EFI,AMD64"
mkdir -p /var/cache/apt-cacher-ng
chmod -R 0777 /var/cache/apt-cacher-ng
docker rm -f apt-cacher-ng || true
cp scripts/fai/Dockerfile ./Dockerfile || curl https://raw.githubusercontent.com/qtvhao/picloud/main/scripts/fai/Dockerfile -o ./Dockerfile
docker build -t fai .
rm Dockerfile
stat /var/cache/apt-cacher-ng/debrep/pool/main/w/wait-for-it || time (docker run --name apt-cacher-ng \
    -v /var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng \
    -v /srv/fai/nfsroot/:/srv/fai/nfsroot/ \
    --privileged --entrypoint /bin/bash -it fai -c "/etc/init.d/apt-cacher-ng start && wait-for-it 127.0.0.1:9999 && fai-setup -vf" > apt-cacher-ng.log) >> time.log
echo "apt-cacher-ng started"
docker rm -f apt-cacher-ng > /dev/null 2>&1 || true
rm apt-cacher-ng.log > /dev/null 2>&1 || true
cat ~/.ssh/id_rsa.pub || ssh-keygen
# Grab your own configuration from https://fai-project.org/FAIme/
docker run --name fai \
    -v /srv/fai/nfsroot/:/srv/fai/nfsroot/ \
    -v ./fai/basefiles:/srv/fai/config/basefiles \
    -v ./fai/class:/srv/fai/config/class \
    -v ./fai/debconf:/srv/fai/config/debconf \
    -v ./fai/disk_config:/srv/fai/config/disk_config \
    -v ./fai/fai-bookworm:/srv/fai/config/fai-bookworm \
    -v ./fai/files/etc/:/srv/fai/config/files/etc/ \
    -v ./fai/grub.cfg.install-only:/srv/fai/config/grub.cfg.install-only \
    -v ./fai/hooks:/srv/fai/config/hooks \
    -v ./fai/package_config:/srv/fai/config/package_config \
    -v ./fai/scripts:/srv/fai/config/scripts \
    -v /var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng \
    --privileged --entrypoint /bin/bash -d fai -c "/etc/init.d/apt-cacher-ng start && wait-for-it 127.0.0.1:9999 && sleep 86400"
echo "Copying ssh key to fai container"
docker cp ~/.ssh/id_rsa.pub fai:/srv/fai/config/files/root-ssh-key
docker cp fai:/etc/apt/sources.list ./fai/fai-bookworm/apt/
docker cp fai:/etc/fai/nfsroot.conf ./fai/fai-bookworm/
docker cp fai/files/etc/systemd/sleep.conf.d/ fai:/srv/fai/nfsroot/etc/systemd/sleep.conf.d/
sed -i 's%^\(NFSROOT\)=.*%\1=/srv/fai/nfsroot%' ./fai/fai-bookworm/nfsroot.conf
echo "Fai-setup starting"
time ((docker exec -it fai fai-setup -vf) > fai-setup.log)
cat fai-setup.log | tail -n50
rm fai-setup.log

(docker exec -it fai fai-mirror -C /srv/fai/config/fai-bookworm -m1 -c$cl /tmp/$HOSTNAME) > fai-mirror.log
cat fai-mirror.log | tail -n50
rm fai-mirror.log
echo "Fai-mirror started"

docker exec -it fai bash -c "echo \"$HOSTNAME\" > /srv/fai/nfsroot/etc/hostname"
(docker exec -it fai fai-cd -C /srv/fai/config/fai-bookworm -g /srv/fai/config/grub.cfg.install-only -m /tmp/$HOSTNAME /fai-cd.iso) > fai-cd.log
docker cp ~/.ssh/id_rsa.pub fai:/srv/fai/nfsroot/root/.ssh/authorized_keys
docker exec -it fai cat /srv/fai/nfsroot/root/.ssh/authorized_keys
echo "Fai-cd started"
cat fai-cd.log | tail -n50
rm  fai-cd.log || true

echo
echo
docker cp fai:/fai-cd.iso $HOSTNAME-fai-cd.iso
echo "This image will do an unattended installation of Debian and the selected applications. No network connection is needed, since all packages are on the installation media. You can write this image to an USB stick or CD. Legacy BIOS and UEFI are supported."
echo "All data on the first disk will be overridden without any further confirmation."
echo "Ready to burn."
echo "Run the following command to burn the image to a USB stick:"
echo "    ./pic dd $HOSTNAME /dev/USB_DEVICE_NAME"
echo "USB device list:"
lsblk -n -o NAME --nodeps | awk '{print $1}' | sed 's/^/    .\/pic dd '$HOSTNAME' \/dev\//'
exit 0
