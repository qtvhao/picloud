#!/bin/bash
set -e
rm time.log || true
rm fai-cd.log || true
rm fai-mirror.log || true
rm fai-setup.log || true
args=("$@")
HOSTNAME=${args[0]}
USB_DEVICE=${args[1]}
if [ -z "$HOSTNAME" ]; then
    echo "HOSTNAME is empty"
    exit 1
fi
if [ -z "$USB_DEVICE" ]; then
    lsblk --nodeps
    echo "USB_DEVICE is empty"
    exit 1
fi
echo "HOSTNAME: $HOSTNAME"
echo "USB_DEVICE: $USB_DEVICE"
#
docker image rm -f fai-setup > /dev/null 2>&1 || true
docker image rm -f fai-mirror > /dev/null 2>&1 || true
docker image rm -f fai-cd > /dev/null 2>&1 || true

docker rm -f fai || true
export cl="DEBIAN,DHCPC,DEMO,FAIBASE,BOOKWORM,ONE,SSH_SERVER,REBOOT,GNOME,FAIME,GRUB_PC,GRUB_EFI,AMD64"
mkdir -p /var/cache/apt-cacher-ng
chmod -R 0777 /var/cache/apt-cacher-ng
docker rm -f apt-cacher-ng || true
cp scripts/fai/Dockerfile ./Dockerfile || curl https://raw.githubusercontent.com/qtvhao/picloud/main/scripts/fai/Dockerfile -o ./Dockerfile
docker build -t fai .
rm Dockerfile
stat /var/cache/apt-cacher-ng/debrep/pool/main/w/wait-for-it || time (docker run --name apt-cacher-ng \
    -v /var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng \
    --privileged --entrypoint /bin/bash -it fai -c "/etc/init.d/apt-cacher-ng start && wait-for-it 127.0.0.1:9999 && fai-setup -v" > apt-cacher-ng.log) >> time.log
echo "apt-cacher-ng started"
docker rm -f apt-cacher-ng > /dev/null 2>&1 || true
rm apt-cacher-ng.log > /dev/null 2>&1 || true
docker run --name fai \
    -v /var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng \
    -v ./fai:/srv/fai/config \
    --privileged --entrypoint /bin/bash -d fai -c "/etc/init.d/apt-cacher-ng start && wait-for-it 127.0.0.1:9999 && sleep 86400"
echo "Fai-setup starting"
docker cp fai:/etc/apt/sources.list ./fai/fai-bookworm/apt/
docker cp fai:/etc/fai/nfsroot.conf ./fai/fai-bookworm/
sed -i 's%^\(NFSROOT\)=.*%\1=/srv/fai/nfsroot%' ./fai/fai-bookworm/nfsroot.conf
time ((docker exec -it fai fai-setup -v) > fai-setup.log)
cat fai-setup.log | tail -n50
rm fai-setup.log

(docker exec -it fai fai-mirror -C /srv/fai/config/fai-bookworm -m1 -c$cl /tmp/mirror) > fai-mirror.log
cat fai-mirror.log | tail -n50
rm fai-mirror.log
echo "Fai-mirror started"

(docker exec -it fai fai-cd -C /srv/fai/config/fai-bookworm -g /srv/fai/config/grub.cfg.install-only -m /tmp/mirror /fai-cd.iso) > fai-cd.log
echo "Fai-cd started"
cat fai-cd.log | tail -n50
rm  fai-cd.log || true

docker cp fai:/fai-cd.iso $HOSTNAME-fai-cd.iso
echo "This image will do an unattended installation of Debian and the selected applications. No network connection is needed, since all packages are on the installation media. You can write this image to an USB stick or CD. Legacy BIOS and UEFI are supported."
echo "All data on the first disk will be overridden without any further confirmation."
echo "Ready to burn."
echo "Run the following command to burn the image to a USB stick:"
echo "./pic dd $HOSTNAME $USB_DEVICE"
exit 0
