#!/bin/bash
set -e
cp scripts/fai/Dockerfile ./Dockerfile || curl https://raw.githubusercontent.com/qtvhao/picloud/main/scripts/fai/Dockerfile -o ./Dockerfile
docker build -t fai .
rm Dockerfile
exit 0
rm fai-cd.log || true
rm fai-mirror.log || true
rm fai-setup.log || true
args=("$@")
HOSTNAME=${args[0]}
USB_DEVICE=${args[1]}
if [ -z "$HOSTNAME" ]; then
    echo "HOSTNAME is empty"
    exit 1
fi
if [ -z "$USB_DEVICE" ]; then
    lsblk --nodeps
    echo "USB_DEVICE is empty"
    exit 1
fi
echo "HOSTNAME: $HOSTNAME"
echo "USB_DEVICE: $USB_DEVICE"
#
docker image rm -f fai-setup || true
docker image rm -f fai-mirror || true
docker image rm -f fai-cd || true

docker rm -f fai || true
export cl="DEBIAN,DHCPC,DEMO,FAIBASE,BOOKWORM,ONE,SSH_SERVER,REBOOT,GNOME,FAIME,GRUB_PC,GRUB_EFI,AMD64"
docker run --name fai \
    -v ./fai:/srv/fai/config \
    --privileged --entrypoint /bin/bash -d fai -c "sleep 86400"
docker image inspect fai-setup > /dev/null 2>&1 || \
    (docker exec -it fai fai-setup -v) > fai-setup.log
# /srv/fai/nfsroot-bookworm/var/tmp/packages.nfsroot
cat fai-setup.log | tail -n100
# docker cp ./fai/fai-bookworm/nfsroot.conf fai:/etc/fai/nfsroot.conf || true
# docker cp ./fai/basefiles               fai:/srv/fai/config || true
# docker cp ./fai/class                   fai:/srv/fai/config || true
# docker cp ./fai/debconf                 fai:/srv/fai/config || true
# docker cp ./fai/disk_config             fai:/srv/fai/config || true
# docker cp ./fai/fai-bookworm            fai:/srv/fai/config || true
# docker cp ./fai/files                   fai:/srv/fai/config || true
# docker cp ./fai/hooks                   fai:/srv/fai/config || true
# docker cp ./fai/package_config          fai:/srv/fai/config || true
# docker cp ./fai/scripts                 fai:/srv/fai/config || true
# docker cp ./fai/grub.cfg.install-only   fai:/srv/fai/config || true
# docker cp ~/.ssh/id_rsa.pub             fai:/srv/fai/config/files/root-ssh-key || true
docker image inspect fai-setup > /dev/null 2>&1 || \
    docker stop fai
docker image inspect fai-setup > /dev/null 2>&1 || \
    docker commit fai fai-setup
# 
docker rm -f fai-mirror || true
docker run --name fai-mirror \
        -v ./fai:/srv/fai/config \
        --privileged -d --entrypoint /bin/bash \
        fai-setup -c "sleep 86400"
docker cp fai-mirror:/etc/fai/ ./fai/fai-bookworm || true
docker image inspect fai-mirror > /dev/null 2>&1 || \
    (docker exec -it fai-mirror fai-mirror -C /srv/fai/config/fai-bookworm -m1 -c$cl /tmp/mirror) > fai-mirror.log
tail -f fai-mirror.log
exit 0
# rm  fai-mirror.log || true
# docker image inspect fai-mirror > /dev/null 2>&1 || \
    # docker commit fai-mirror fai-mirror
# 
exit 0
# docker rm -f fai-cd || true
stat $HOSTNAME-fai-cd.iso > /dev/null 2>&1 || \
    docker run --name fai-cd \
        -e cl=$cl \
        --privileged -d --entrypoint /bin/bash \
        fai-mirror -c "sleep 86400"
(docker exec -it fai-cd fai-cd -C /srv/fai/config/fai-bookworm -g grub.cfg.install-only -m /tmp/mirror /fai-cd.iso) > fai-cd.log
# cat fai-cd.log | head -n100
rm  fai-cd.log || true
# 
exit 0
stat $HOSTNAME-fai-cd.iso > /dev/null 2>&1 || \
    docker cp fai-cd:/fai-cd.iso $HOSTNAME-fai-cd.iso
# 
FILE_SIZE_IN_MB=$(du -m $HOSTNAME-fai-cd.iso | cut -f1)
echo "File size in MB: $FILE_SIZE_IN_MB""Mb"
dd if=$HOSTNAME-fai-cd.iso of=$USB_DEVICE status=progress bs=4M
echo "Bootable USB created"
echo "Unmounting $USB_DEVICE"
eject $USB_DEVICE
echo "Ready to install. Please reboot and select USB device as boot device."
exit 0
