#! /bin/bash
isRoot=$(whoami)
if [ "$isRoot" != "root" ]; then
    echo "Please run as root"
    exit 1
fi
args=("$@")
arg1=${args[0]}
if [ "$arg1" == "update" ]; then
    echo "Updating PiCloud"
    curl "https://raw.githubusercontent.com/qtvhao/picloud/main/pic?$(date +%s)" -o pic && chmod +x pic
    exit 0
fi
if [ "$arg1" == "install" ]; then
    echo "Installing Docker"
    curl -fsSL https://get.docker.com -o install-docker.sh
    chmod +x install-docker.sh
    docker version || ./install-docker.sh
    echo "Installed Docker"
    rm install-docker.sh
    ./pic expose
    ./pic reinstall-k3s
    exit 0
fi
if [ "$arg1" == "expose" ]; then
    curl https://raw.githubusercontent.com/qtvhao/picloud/main/scripts/cloudflared/expose -o expose && chmod +x expose
    ./expose "$1" "$2" "$3"
    rm ./expose
    exit 0
fi
if [ "$arg1" == "remove" ]; then
    echo "Removing PiCloud"
    docker rm -f picloud-k3s-server
    apt remove docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin -y >/dev/null
    exit 0
fi
if [ "$arg1" == "start" ]; then
    echo "Starting PiCloud"
    exit 0
fi
if [ "$arg1" == "stop" ]; then
    echo "Stopping PiCloud"
    exit 0
fi
if [ "$arg1" == "restart" ]; then
    echo "Restarting PiCloud"
    exit 0
fi
if [ "$arg1" == "status" ]; then
    echo "Status of PiCloud"
    exit 0
fi
if [ "$arg1" == "reinstall-k3s" ]; then
    set -e
    curl https://raw.githubusercontent.com/qtvhao/picloud/main/scripts/k3s/reinstall-k3s -o ./reinstall-k3s && chmod +x reinstall-k3s
    ./reinstall-k3s
    rm ./reinstall-k3s
    exit 0
fi
if [ "$arg1" == "cilium" ]; then
    echo "Installing Cilium"
    helm repo add cilium https://helm.cilium.io/
    helm install cilium cilium/cilium --namespace=kube-system
    # export KUBECONFIG=~/.kube/config
    # CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
    # CLI_ARCH=amd64
    # if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
    # curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    # sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
    # sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
    # rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
    # cilium install --version 1.14.2
    # cilium status --wait
    # cilium connectivity test
    exit 0
fi
if [ "$arg1" == "join-k3s" ]; then
    args=("$@")
    NODE_IP=${args[1]}
    echo "Connecting to $NODE_IP"
    ssh "$NODE_IP" "hostname" || exit 1
    echo "Connected to $NODE_IP"
    docker cp picloud-k3s-server:/var/lib/rancher/k3s/server/tls/server-ca.crt /usr/local/share/ca-certificates/kubernetes.crt
    scp /usr/local/share/ca-certificates/kubernetes.crt "$NODE_IP":/usr/local/share/ca-certificates/kubernetes.crt
    ssh "$NODE_IP" "update-ca-certificates"
    set -e
    K3S_URL=$(jq -r '.k3s_url' k3s.json)
    K3S_TOKEN=$(jq -r '.k3s_token' k3s.json)
    echo "K3S_URL: $K3S_URL"
    echo "K3S_TOKEN: $K3S_TOKEN"
    NODE_COMMAND="curl -sfL https://get.k3s.io | K3S_URL=$K3S_URL K3S_TOKEN=$K3S_TOKEN sh -"
    echo "Joining worker node to this cluster"
    echo "NODE_IP: $NODE_IP"
    ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $NODE_IP "$NODE_COMMAND"
    echo "Joined worker node to this cluster"
    kubectl get nodes
    exit 0
fi
if [ "$arg1" == "help" ]; then
    echo "Help for PiCloud"
    echo "Usage: ./pic [command]"
    echo "Commands:"
    echo "  update"
    echo "  expose [protocol] [hostname] [port]"
    echo "  install"
    echo "  remove"
    echo "  start"
    echo "  stop"
    echo "  restart"
    echo "  status"
    echo "  install-k3s"
    echo "  help"

    exit 0
fi
./pic help
